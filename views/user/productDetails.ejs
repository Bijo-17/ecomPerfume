
<%-include("../partials/user/header")%>
<head>
  
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
    rel="stylesheet"
  />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
  <style>
    .product-thumb {
      max-height: 100px;
      object-fit: cover;
      cursor: pointer;
    }
    .offer-box {
      background-color: #f8f9fa;
      border-left: 5px solid #198754;
      padding: 1rem;
      margin-bottom: 1rem;
    }
    a {
      text-decoration: none;
      color: black;
    }

    .zoom-image {
  transition: transform 0.3s ease;
  cursor: zoom-in;
}

.zoom-image:hover {
  transform: scale(1.8);
  cursor: zoom-out;
  z-index: 10;
}

.star {
  color: #ccc;
  font-size: 1.2rem;
}

.star.filled {
  color: gold;
}

.star.editable {
  cursor: pointer;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}

.product-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.product-name {
  margin: 0;
  font-size: 1.5rem;
  font-weight: bold;
}

.wishlist-btn {
  cursor: pointer;
  color: #dc3545; /* Bootstrap's red */
  font-size: 1.5rem;
  transition: transform 0.2s ease;
}

.wishlist-btn:hover {
  transform: scale(1.1);
  color: #bd2130;
}

.wishlist-icons {
  pointer-events: none; /* So the parent span handles the click */
}

         .discount {
           color: #4caf50;
           font-size: 14px;
           font-weight: 600;
          }


        .edit-input {
           width: 80%;
           margin-top : 5px;
        }  



  </style>
</head>
<body>
 
  <section class="container"> <a href="/">Home</a> / <a href="/product">Product</a> / <%=product.product_name%> </section>
  <div class="container my-5">
  <div class="row g-5 flex-column flex-md-row">
    <!-- Left (Mobile: Bottom) — Image Gallery -->
    <div class="col-md-6">
      <div class="card shadow-sm p-3 rounded">
        <!-- Main Image -->
        <div class="text-center mb-3">
          <img
            src="<%= product.image[0] %>"      
            id="mainImage"
            class="img-fluid rounded zoom-image"
            style="max-height: 400px; object-fit: contain; width: 100%;"
            alt="Main Product Image"
          />
        </div>

        <!-- Thumbnails -->
        <div class="d-flex flex-wrap justify-content-center gap-2">
          <% for(let i = 0; i < product.image.length; i++) { %>
            <img
              src="<%= product.image[i] %>"
              class="img-thumbnail"
              style="width: 70px; height: 70px; object-fit: cover; cursor: pointer;"
              onclick="document.getElementById('mainImage').src=this.src"
              alt="Thumbnail <%= i + 1 %>"
            />
          <% } %>
        </div>
      </div>
    </div>

    <!-- Right (Mobile: Top) — Product Details -->
    
    <div class="col-md-6">
  <div class="product-header d-flex justify-content-between align-items-center">
    <h2 class="fw-bold mb-2 mb-0 product-name"><%= product.product_name %></h2>
      <span class="wishlist-btn" data-id="<%= product._id %>">
      <i class="fa-regular fa-heart wishlist-icons"></i> 
    </span> 
  </div>
  <p class="text-muted"><%= product.brand_id.name %></p>



      <div class="rating">
  <% const filled = Math.floor(product.averageRating || 0); %>
  <% for (let i = 0; i < 5; i++) { %>
    <% if (i < filled) { %>
      <span class="star filled">★</span>
    <% } else { %>
      <span class="star">☆</span>
    <% } %>
  <% } %>
  <span class="rating-count">(<%= ratings.length %>)</span>
</div> <br>






      <h4 class="text-success"> 
        ₹<%= sales_price %>
        <small class="text-muted text-decoration-line-through ms-2">₹<%= regular_price %></small>
         <span class="discount"><%= Math.round(parseFloat(1 - sales_price/regular_price) * 100) %>% off</span>
      </h4>

      <!-- Volume Variants -->
      <div class="mb-3">    
        <label class="form-label fw-bold">Select Volume (ML):</label ><br>
        <div class="btn-group" role="group">
          <% product.volume.forEach((vol, i) => { %>
       
            <input type="radio" class="btn-check" value="<%=vol%>" name="volume" id="v<%=i%>" <%=vol == volume ? 'checked' : '' %>
                         onchange="location.href='/productDetails/<%=product._id%>?volume=<%=vol%>'">
            <label class="btn btn-outline-primary" for="v<%= i %>" ><%= vol %></label>
          <% }) %>
        </div>
      </div>

      <!-- Quantity -->
      <div class="mb-3">
        <label class="form-label fw-bold">Quantity:</label>
        <select id="quantity" class=" w-25 w-md-25">
        <option value="1">1</option> <option value="2">2</option> <option value="3">3</option> <option value="4">4</option> <option value="5">5 - max</option>
        </select>
      </div>


      <!-- Offers -->
      <div class="offer-box mb-4">
        <strong>Limited Time Offer:</strong>
        <ul class="mb-0">
          <!-- <li>Buy 1 Get 1 Free</li> -->
          <li>Free shipping on orders above ₹500</li>
        </ul>
      </div>

      <!-- Buttons -->

       <% if(product_status === 'Out of stock' ) { %> 
        <div class="d-grid gap-2 d-md-flex">        
           <h4>Out of stock</h4>
        </div>
        <% } else if(product_status === 'Unavailable') {%>
         <div class="d-grid gap-2 d-md-flex"> 
          <h4>Unavailable</h4>
         </div>
          <% } else {%>
      <div class="d-grid gap-2 d-md-flex">
        <button class="btn btn-warning me-md-2 w-100 w-md-auto" id="addToCart-btn">Add to Cart</button>
        <!-- <button class="btn btn-success w-100 w-md-auto">Buy Now</button> -->
      </div>
         <% } %>
    </div>
  </div>
</div>


  <!-- Tabs -->
  <div class="mt-5 container">
    <ul class="nav nav-tabs" id="productTab" role="tablist">
      <li class="nav-item" role="presentation">
        <button
          class="nav-link active"
          id="desc-tab"
          data-bs-toggle="tab"
          data-bs-target="#desc"
          type="button"
          role="tab"
        >
          Description
        </button>
      </li>
    
      <li class="nav-item" role="presentation">
        <button
          class="nav-link"
          id="reviews-tab"
          data-bs-toggle="tab"
          data-bs-target="#reviews"
          type="button"
          role="tab"
        >
          Reviews
        </button>
      </li>
    </ul>
    <div class="tab-content border border-top-0 p-3" id="productTabContent">
      <div class="tab-pane fade show active" id="desc" role="tabpanel">
        <p><%=product.description%></p>
      </div>
     
      <div class="tab-pane fade" id="reviews" role="tabpanel">
      

        <!-- Display reviews -->
         
    <% ratings.forEach(r => { %>
       <div class="border-bottom mt-3" data-review-id="<%= r._id%>" >
         <input type="text" id="productId" value="<%=r.product_id%>" hidden>
      <strong><%= r.user_id.name %></strong> 
      <div style="padding-left: 10px;"> 
      <span class="review-text" > <%= r.review %> </span>

      <% if (r.user_id._id.toString() === user?._id?.toString()) { %> 
           <button class="btn btn-sm btn-link text-primary edit-btn" style="border:none;">
               ✏️
           </button>     
           <i class='bi bi-trash btn p-0 delete-btn'></i>          
        <%}%>
        
       <div class="stars text-warning" data-current-rating="<%= r.rating%>">
       <% for (let i = 1 ; i <= 5; i++) { %>
           <span class="review-rating star <%= r.rating >= i ? 'filled' : '' %>" data-rating="<%= i%>" > ★ </span>
        <% } %>
       </div>
             <button class="btn btn-sm btn-info save-btn" style="display:none;">Save</button>
               <span class="btn btn-sm btn-danger close-btn ml-3" style="display: none;"> X </span>   
         </div>
       </div>
   <% }) %>  
      </div>
    </div>
  </div>


 <div class="container"> 
  <form action="/rateProduct/<%= product._id %>" method="POST">
  <label for="rating">Rate this product:</label>
  <select name="rating" required>
    <% for(let i = 1; i <= 5; i++) { %>
      <option value="<%= i %>"><%= i %> Star</option>
    <% } %>
  </select>
  
 
    <textarea name="review" placeholder="Write a review (optional)" class="form-control my-2"></textarea>
    <button type="submit" class="btn btn-sm btn-primary">Submit</button>
</form>
</div>

<!-- realted products -->

<div class="container my-5">
  <h4 class="mb-4">Related Products</h4>
  <div class="row g-4">
    <% relatedProducts.forEach(rp => { %>
      <div class="col-md-3 col-6">
        <div class="card h-100 shadow-sm">
          <img src="<%= rp.image[0] %>" class="card-img-top img-fluid" style="height: 200px; object-fit: cover;" alt="<%= rp.product_name %>">
          <div class="card-body text-center">
              <h6 class="card-subtitle text-muted mb-1"><%= rp.brand_id?.name %></h6>
            <h6 class="card-title mb-1"><%= rp.product_name %></h6>

            <div class="mb-2">
                <% for (let i = 0; i < 5; i++) { %>
                  <% if (i < Math.floor(rp.averageRating)) { %>
                    <span class="text-warning">★</span>
                  <% } else { %>
                    <span class="text-secondary">☆</span>
                  <% } %>
                <% } %>
                <small class="text-muted">(<%= rp.ratingCount %>)</small>
              </div>
            <p class="text-success fw-bold mb-1">₹<%= rp.final_price %></p>
            <p class="text-muted text-decoration-line-through mb-2">₹<%= rp.regular_price %></p>
            <a href="/productDetails/<%= rp._id %>" class="btn btn-outline-primary btn-sm">View</a>
          </div>
        </div>
      </div>
    <% }) %>
  </div>
</div>


<%-include("../partials/user/footer")%>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  const mainImage = document.getElementById('mainImage');
  let zoomed = false;

  mainImage.addEventListener('click', function () {
    if (window.innerWidth < 768) { // only on mobile
      zoomed = !zoomed;
      mainImage.style.transform = zoomed ? 'scale(2)' : 'scale(1)';
      mainImage.style.cursor = zoomed ? 'zoom-out' : 'zoom-in';
    }
  });

 document.getElementById('addToCart-btn').addEventListener('click',async ()=>{

  
   const quantity = document.getElementById('quantity').value;
   const volume = document.querySelector('input[name="volume"]:checked')?.value

  
   const response = await fetch(`/addToCart/<%= product._id%>`,{
         
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({quantity, volume})
   })

 const data = await response.json();


      if (data.success) {
        Swal.fire({        
         icon: "success",
          title: "Item added to Cart ",
          showConfirmButton: false,
            timer: 1200,
             willClose: () => {
                window.location.reload();
             }

        })
    
      }else {
        Swal.fire({
           icon: "error",
            title: data.message || "something went wrong",
            showConfirmButton:false, 
            timer:1200, 
             willClose: () => {
              window.location.reload();
             }
        })
      }

 })

 
  document.querySelector('.wishlist-btn').addEventListener('click' , async ()=>{
              
   const volume = document.querySelector('input[name="volume"]:checked')?.value;
      
   const response = await fetch(`/addToWishlist/<%= product._id%>`,{
         
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body : JSON.stringify({volume})
   })

    const data = await response.json();


      if (data.success) {
        Swal.fire({        
         icon: "success",
          title: "Item added to wishlist ",
          showConfirmButton: false,
            timer: 1200,
             willClose: () => {
                window.location.reload();
             }

        })
    
      }else {
        Swal.fire({
           icon: "error",
            title: data.message || "something went wrong",
            showConfirmButton:false, 
            timer:1200, 
             willClose: () => {
              window.location.reload();
             }
        })
      }

 })


   document.addEventListener('DOMContentLoaded', ()=>{ 

       
      document.querySelectorAll(".edit-btn").forEach(edit=>{ 

       
           edit.addEventListener('click' , function(e){  
           e.preventDefault();

           const reviewBox = edit.closest('[data-review-id]');

           const reviewText = reviewBox.querySelector('.review-text');
           const starsContainer = reviewBox.querySelector('.stars');

           const saveBtn = reviewBox.querySelector('.save-btn');
           const closeBtn = reviewBox.querySelector('.close-btn');

           reviewText.contentEditable = 'true';
           reviewText.focus();
           
        
           const currentText = reviewText.innerText;
           const currentRating = parseInt(starsContainer.dataset.currentRating);
        
              // reviewText.innerHTML = `<textarea class="update-text" style="width:280px"> ${currentText} </textarea> `
               
           let newRating;
          
            edit.style.display = 'none';
            saveBtn.style.display = 'inline-block';
            closeBtn.style.display = 'inline-block';
   
             starsContainer.querySelectorAll('.star').forEach(star=>{
              star.classList.add('editable');
                 star.addEventListener('click',()=>{ 
                     const selected = parseInt(star.dataset.rating);

                     starsContainer.querySelectorAll('.star').forEach(s=>{
                         s.classList.toggle("filled" , parseInt(s.dataset.rating) <= selected );
                     });

                     starsContainer.dataset.currentRating = selected;
                     newRating = selected;
                 })
             })


            closeBtn.addEventListener('click',()=>{
                
                reviewText.innerHTML = `<span> ${currentText} </span>`
                  
                starsContainer.innerHTML = '';

                for(let i=1 ; i <= 5 ; i++){

                   const star = document.createElement('span');
                   star.className = 'review-rating star' + (currentRating >= i ? ' filled' : '');
                   star.dataset.rating = i;
                   star.textContent= '★';
                   starsContainer.appendChild(star);
                }

           
                edit.style.display = 'inline-block';
                saveBtn.style.display = 'none';
                closeBtn.style.display = 'none';
                 reviewText.contentEditable = 'false';

              })

         })
       
     })



     document.querySelectorAll(".save-btn").forEach(save => {

      save.addEventListener("click", async function (e) {

      const reviewBox = save.closest("[data-review-id]");
      const reviewText = reviewBox.querySelector(".review-text");
      const starsContainer = reviewBox.querySelector(".stars");
      const closeBtn = reviewBox.querySelector(".close-btn");
      const productId = reviewBox.querySelector("#productId").value;

      const updatedReview = reviewText.textContent;
      const updatedRating = parseInt(starsContainer.dataset.currentRating);


      const response = await fetch(`/editRating/${productId}`,{
               method: 'post',
               headers : {'content-Type' : 'application/json'},
               body : JSON.stringify({updatedReview , updatedRating})

      })

        const data = await response.json();

        if(data.success){

        reviewText.innerHTML = `<span class=review-text> ${updatedReview} </span>`
        starsContainer.innerHTML = '';
           for(let i=1 ; i <= 5 ; i++){
               const star = document.createElement('span');
                   star.className = 'review-rating star' + (updatedRating >= i ? ' filled' : '');
                   star.dataset.rating = i;
                   star.textContent= '★';
                   starsContainer.appendChild(star);
                }

         save.style.display = "none";
         closeBtn.style.display = "none";
          reviewText.contentEditable = 'false';
         reviewBox.querySelector(".edit-btn").style.display = "inline-block";

       }else {
         window.location.href = `/productDetails/${productId}`;
       }
  });
});


 // delete review 

 document.querySelectorAll('.delete-btn').forEach(del =>{
          
          del.addEventListener('click',async ()=>{
             const reviewBox =  del.closest('[data-review-id]');
             const reviewId = reviewBox.dataset.reviewId;
 
              const response = await fetch(`/deleteRating/${reviewId}`, {
                  method : 'get',
                  headers : {'content-Type' : 'application/json'}

              })

              const data = await response.json();

              if(data.success){
                 window.location.reload();
              }


          })
 })





  })
 



</script>

</body>

