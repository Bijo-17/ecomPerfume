
<head>

    <title>Checkout - Petal & Mist</title>
    <link rel="stylesheet" href="/css/checkout-with-address.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

       <%-include("../partials/user/header")%> 
  <style>
     
     .total-value {
  font-size: 16px;
  font-weight: 500;
  color: #333;
}

.total-value.waived {
  color: #28a745; /* green for free shipping */
}

.total-value del {
  color: #888;
  margin-right: 6px;
}

.free-text {
  font-weight: bold;
  color: #28a745;
  font-size: 15px;
}

.discount-section {
  margin-top: 20px;
}

.discount-input-container {
  display: flex;
  gap: 10px;
  align-items: center;
}

.discount-input {
  flex: 1;
  padding: 8px 12px;
  border: 1px solid #ccc;
  border-radius: 5px;
}

.apply-btn {
  background-color: #28a745;
  color: white;
  padding: 8px 14px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-weight: 500;
}

.apply-btn:hover {
  background-color: #218838;
}

.applied-coupon-box {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #e8f5e9;
  border: 1px solid #c3e6cb;
  border-radius: 6px;
  padding: 12px 16px;
}

.coupon-info {
  display: flex;
  flex-direction: column;
}

.badge-coupon {
  background-color: #28a745;
  color: white;
  font-size: 0.9rem;
  padding: 2px 10px;
  border-radius: 20px;
  font-weight: bold;
  width: fit-content;
}

.coupon-message {
  font-size: 0.85rem;
  color: #155724;
  margin-top: 4px;
}

.coupon-discount {
  font-size: 0.85rem;
  color: #155724;
  margin-top: 2px;
  font-weight: bold;
}

.remove-coupon-btn {
  background: none;
  border: none;
  color: #dc3545;
  font-size: 1.4rem;
  cursor: pointer;
  line-height: 1;
  font-weight: bold;
}

.available-coupons-section {
  margin-top: 1rem;
}

.show-coupons-btn {
  background-color: #f3f3f3;
  color: #333;
  padding: 8px 14px;
  border: none;
  cursor: pointer;
  font-size: 0.9rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  border-radius: 6px;
  transition: all 0.3s;
}

.show-coupons-btn:hover {
  background-color: #e2e2e2;
}

.coupons-list {
  margin-top: 0.5rem;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 10px;
}

.coupon-card {
  background: #fff8f0;
  border: 1px solid #ffdaab;
  padding: 12px;
  border-radius: 8px;
  transition: transform 0.2s;
  cursor: pointer;
}

.coupon-card:hover {
  transform: translateY(-3px);
  background-color: #fff3e0;
}

.coupon-card h5 {
  margin: 0;
  color: #d46a00;
}

.coupon-card p {
  margin: 4px 0 0;
  font-size: 0.85rem;
  color: #555;
}

.hidden {
  display: none;
}



  </style>
</head>
<body>
    <div class="container">
   


        <!-- Main Content -->
        <main class="main-content">
            <h2 class="page-title">Checkout</h2>

            <div class="checkout-container">
                <!-- Left Column - Forms -->
                <div class="checkout-forms">
                    <!-- Delivery Section -->
                    <section class="delivery-section">
                        <h3 class="section-title">Delivery</h3>

                       

                        <script id="address-data" type="application/json">
                             <%- JSON.stringify(address) %>
                          </script>

               <!-- 2. Selected Address slot, empty for JS to fill -->
                    <div class="selected-address" id="selectedAddressContainer"></div>

                 <!-- 3. Additional Addresses button -->
                    

                  
                    

                <% if (address && address.length > 0) { %>

                        <button class="additional-addresses-btn" id="additionalAddressesBtn" style="display: non;">
                             More Address & Add Address
                        </button>

                  <% } else { %> 


                         <form id="checkoutForm" class="checkout-form" >
                            <div class="form-row">
                                <div class="form-group">
                                    <input type="text" id="fullName" name="nameForm" placeholder="Full Name" required>
                                </div>
                               
                            </div>

                            <div class="form-row">
                                <div class="form-group full-width">
                                    <input type="text" id="address" name="address_nameForm" placeholder="Address" required>
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="form-group">
                                    <input type="text" id="locality" name="localityForm" placeholder="Locality" required>
                                </div>
                                <div class="form-group">
                                    <input type="text" id="city" name="cityForm" placeholder="City" required>
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="form-group">
                                    <input type="text" id="pinCode" name="pin_codeForm" placeholder="Pin Code" required>
                                </div>
                                <div class="form-group">
                                    <input type="text" id="landmark" name="landmarkForm" placeholder="Landmark(optional)">
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="form-group">
                                    <input type="number" id="phoneNumber" name="phone_numberForm" placeholder="Phone number" required>
                                </div>
                                <div class="form-group">
                                    <select id="state" name="stateForm" required>
                                        <option value="">State</option>
                                        <option value="Kerala">Kerala</option>
                                        <option value="Maharashtra">Maharashtra</option>                            
                                        <option value="Tamil Nadu">Tamil Nadu</option>
                                      
                                    </select>
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="form-group full-width">
                                    <label class="checkbox-label">
                                        <input type="checkbox" id="saveAddressCheckbox" name="saveInfoForm">
                                        <span class="checkmark"></span>
                                        Save This Info For Future
                                    </label>
                                </div>
                            </div>

                            <div class="address-type">
                                <label class="radio-label">
                                    <input type="radio" name="address_typeForm" value="home" checked>
                                    <span class="radio-button"></span>
                                    Home
                                </label>
                                <label class="radio-label">
                                    <input type="radio" name="address_typeForm" value="work">
                                    <span class="radio-button"></span>
                                    Work
                                </label>
                            </div>
                        </form>
                        <% } %>
                    </section>
                
          

                
                    <!-- Payment Section -->
                    <section class="payment-section">
                        <h3 class="section-title">Payment</h3>
                        
                        <div class="payment-options">

                            <!-- wallet -->

                              <div class="payment-option">
                                <label class="payment-label">
                                    <input type="radio" name="paymentMethod" value="wallet" >
                                    <span class="radio-button"></span>
                                      wallet (Balance: <%=wallet?.balance.toFixed(2) || 0%>)
                                </label>
                               
                            </div>


                            <!-- razorpay Payment -->
                            <div class="payment-option">
                                <label class="payment-label">
                                    <input type="radio" name="paymentMethod" value="online" >
                                    <span class="radio-button"></span>
                                     Online payment by Card , Netbanking , UPI , ... 
                                </label>
                               
                            </div>

                            
                            <!-- COD Payment -->
                            <div class="payment-option">
                                <label class="payment-label">
                                    <input type="radio" name="paymentMethod" value="cod">
                                    <span class="radio-button"></span>
                                    COD
                                </label>
                            </div>
                        </div>
                    </section>
                </div>

                <!-- Right Column - Order Summary -->
              
                 <div class="order-summary">
                   <% cart.items.forEach(product=>{  %> 
                    <div class="order-item">
                        <div class="item-badge"><%=product.quantity%></div>
                        <div class="item-image">
                            <img src="<%=product.product_id.image[0]%>" alt="product-img">
                        </div>
                        <div class="item-details">
                            <h4 class="item-name"><%=product.product_id.product_name%></h4>
                            <p class="item-volume"><%=product.volume %> ML</p> 
                            <div class="item-price">
                                <span class="current-price">₹ <%=product.sales_price %>  </span>
                                <span class="original-price">₹ <%=product.regular_price%></span>
                                <span class="current-price">X <%= product.quantity%></span>
                            </div>
                        </div>
                    </div>
                 <% }) %>
                

                 <div class="discount-section">

                    <% if(appliedCoupon) { %>

                           <div class="applied-coupon-box">
                              <div class="coupon-info">
                               <span class="badge-coupon"><%= appliedCoupon?.coupon_name?.toUpperCase()%></span>
                               <span class="coupon-message">Coupon applied successfully!</span>
                                <span class="coupon-discount">You saved ₹ <%= discount.toFixed(2) %></span>
                              </div>
                               <button type="button" class="remove-coupon-btn" id="removeCouponBtn">×</button>
                              </div>
                    
                    <%}else  { %>
        
                  <div class="discount-input-container">
                       <input type="text" id="discountCode" placeholder="Discount code" class="discount-input">
                          <button type="button"  class="apply-btn" id="applayCoupon" >Apply</button>
                      </div>
              <div id="discount-error" style="color: red; font-size: 0.8rem;"></div>


              
           <div class="available-coupons-section">
                    <button id="toggleCouponsBtn" class="show-coupons-btn">
                      <i class="fas fa-gift"></i> Show Available Coupons
                     </button>

               <div id="couponsList" class="coupons-list hidden">
              <!-- Dynamically add coupon items here -->
         
              <% coupons.forEach(coupon=>{ %>

                   <div class="coupon-card" >
                       <h5><%= coupon.coupon_name.toUpperCase() %></h5>
                       <p>Get <%= coupon.discount_type === 'percentage' ? coupon.offer_price + ' %' : '₹ '+ coupon.offer_price %> off on order above ₹<%=coupon.minimum_price %></p>
                      <% if(coupon.expiry_date){ %>
                       <p>Expires at <%=coupon?.expiry_date?.toLocaleDateString()%></p>
                       <%}%>
                  </div>
             <%  }) %>
                     <%  if(!coupons || coupons.length <= 0){ %>
                          <h6> No coupons available </h6>
                      <% } %>
                      
             </div>

         </div>

         <%}%>
            
    </div>




                    <div class="order-totals">
                        <div class="total-row">
                            <span class="total-label">Subtotal</span>
                            <span class="total-value" id="subtotal">₹<%=subtotal.toFixed(2)%></span>
                        </div>
                        <div class="total-row">
                            <span class="total-label">Shipping</span>
                           <% if(finaltotal > 500) { %>
                                 <span class="total-value waived">
                                 <del>₹40.00</del> <span class="free-text">Free</span>
                                 </span>
                        <% } else { %>   
                                 <span class="total-value">₹40.00</span>
                             <% } %>
                        </div>
                        <div class="total-row discount-row"">
                            <span class="total-label">Discount</span>
                            <span class="total-value discount" id="discount">-₹<%=discount?.toFixed(2) || 0.00 %></span>
                        </div>
                        <% if(couponDiscount ) { %> 
                         <div class="total-row discount-row"> 
                            <span class="total-label">Coupon discount</span>
                            <span class="total-value discount" id="couponDiscount" >-₹<%=couponDiscount?.toFixed(2) || 0.00 %></span>
                        </div>
                        <% } %>
                         <div class="total-row discount-row" id="couponDiscountDiv"> </div>
                            
                        
                        <div class="total-row final-total">
                            <span class="total-label">Total</span>
                            <span class="total-value" id="finalTotal">₹ <%= finaltotal.toFixed(2)%></span>
                        </div>
                    </div>

                    <button type="submit"  class="place-order-btn" id="placeOrderBtn">
                        Place your order
                    </button>
                </div>


            </div>
        </main>

        <!-- Footer -->
     
    </div>


<!-- Address Selection Modal -->
<div class="modal-overlay" id="addressModal">
    <div class="modal-content bg-white p-5">
        <div class="modal-header">
            <h3>Select Delivery Address</h3>
            <button class="close-modal" id="closeModal">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="modal-body">
            <div class="address-list" id="addressList"></div>
            <button class="add-new-address-btn" id="addNewAddressBtn" onclick="openAddAddressModal()">
                <i class="fas fa-plus"></i> Add New Address
            </button>
        </div>
    </div>
</div>

<!-- Add/Edit Address Modal -->
<div class="modal-overlay" id="addressFormModal" >
    <div class="modal-content" style="background: white; padding: 30px;">
        <div class="modal-header">
            <h3 id="addressFormTitle">Add New Address</h3>
          
        </div>
        <div class="modal-body">
            <form id="addressForm" class="address-form" method="post" action="/address/add" >
                <input type="hidden" id="addressId" name="addressId">
                <div class="form-row">
                    <div class="form-group">
                        <input type="text" id="fullName" name="name" placeholder="Full Name" required>
                    </div>
                    <div class="form-group">
                        <input type="tel" id="mobile" name="phone_number" placeholder="Mobile Number" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group full-width">
                        <input type="text" id="addressLine" name="address_name" placeholder="Address (House No, Building, Street, Area)" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <input type="text" id="locality" name="locality" placeholder="Locality/Town" required>
                    </div>
                    <div class="form-group">
                        <input type="text" id="city" name="city" placeholder="City/District" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <select id="state" name="state" required>
                            <option value="">Select State</option>
                            <option value="Kerala">Kerala</option>
                            <option value="Tamil Nadu">Tamil Nadu</option>
                            <option value="Karnataka">Karnataka</option>
                            <option value="Maharashtra">Maharashtra</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <input type="text" id="pincode" name="pin_code" placeholder="Pin Code" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <input type="text" id="landmark" name="landmark" placeholder="Landmark (Optional)">
                    </div>
                </div>
                <div class="address-type-selection">
                    <label class="radio-label">
                        <input type="radio" name="address_type" value="home" checked>
                        <span class="radio-button"></span> Home
                    </label>
                    <label class="radio-label">
                        <input type="radio" name="address_type" value="work">
                        <span class="radio-button"></span> Work
                    </label>
                 
                </div>
                <div class="form-actions">
                    <button type="button" class="cancel-btn" id="cancelAddressForm">Cancel</button>
                    <button type="submit" class="save-btn">Save Address</button>
                </div>
            </form>
        </div>
    </div>
</div>

<%-include("../partials/user/footer")%>

   <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
 
   <script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<script>

 

document.addEventListener('DOMContentLoaded', () => {

    const addressModal = document.getElementById('addressModal');
    const addressFormModal = document.getElementById('addressFormModal');
    const addressList = document.getElementById('addressList');
    const selectedAddressContainer = document.getElementById('selectedAddressContainer');
    let selectedAddressId = null;

   

      const rawData = document.getElementById('address-data').textContent;
    const savedAddresses = JSON.parse(rawData);

     const defaultAddress = savedAddresses.find(addr => addr.isDefault) || savedAddresses[0];



        if (defaultAddress) {
          
            selectAddress(defaultAddress._id);
        }

 


    // Show modal with all addresses
    document.getElementById('additionalAddressesBtn')?.addEventListener('click', () => {
        populateAddressList();
        addressModal.classList.add('active');
        document.body.style.overflow = 'hidden';
    });

    document.getElementById('closeModal')?.addEventListener('click', () => {
        addressModal.classList.remove('active');
        document.body.style.overflow = 'auto';
    });

    // Add New Address
    document.getElementById('addNewAddressBtn')?.addEventListener('click', () => {
        document.getElementById('addressForm').reset();
        document.getElementById('addressFormTitle').textContent = 'Add New Address';
        document.getElementById('addressFormModal').classList.add('active');
    });

    document.getElementById('cancelAddressForm')?.addEventListener('click', () => {
        document.getElementById('addressFormModal').classList.remove('active');
    });

    // Populate modal with addresses
    function populateAddressList() {
        addressList.innerHTML = '';
        savedAddresses.forEach(address => {
            const card = document.createElement('div');
            card.className = `modal-address-card ${address._id === selectedAddressId ? 'selected' : ''}`;
            card.onclick = () => selectAddress(address._id);

            card.innerHTML = `
                <div class="modal-address-header">
                    <span class="modal-address-type">${address.isDefault ? 'Default' : address.address_type}</span>
                    <div class="modal-address-actions">
                        <button class="modal-edit-btn" onclick="event.stopPropagation(); editAddress('${address._id}')">Edit</button>
                        <button class="modal-delete-btn" onclick="event.stopPropagation(); deleteAddress('${address._id}')">Delete</button>
                    </div>
                </div>
                <div class="modal-address-content">
                    <div class="modal-address-name">${address.name}</div>
                    <div>${address.address_name}</div>
                    <div>${address.locality}, ${address.city}, ${address.state} ${address.pin_code}</div>
                    <div>Mobile: ${address.phone_number}</div>
                </div>
            `;
            addressList.appendChild(card);
        });
    }

    // Select and update address
    function selectAddress(id) {
        selectedAddressId = id;
        const selected = savedAddresses.find(a => a._id === id);
        if (!selected) return;

        selectedAddressContainer.innerHTML = `
            <div class="address-card">
                <div class="address-header">
                    <label class="address-radio">
                        <input type="radio" name="selectedAddress" value="${selected._id}" checked>
                        <span class="radio-button"></span>
                        <span class="address-type">${selected.isDefault ? 'Default' : selected.address_type}</span>
                    </label>
                    <button class="edit-btn" onclick="editAddress('${selected._id}')">Edit</button>
                </div>
                <div class="address-content">
                    <p class="address-name">${selected.name}</p>
                    <p class="address-line">${selected.address_name}</p>
                    <p class="address-pincode">${selected.pin_code}</p>
                    <p class="address-mobile">Mobile: ${selected.phone_number}</p>
                    <span class="address-label">${selected.address_type}</span>
                </div>
            </div>
        `;

        addressModal.classList.remove('active');
        document.body.style.overflow = 'auto';
    }

    // Edit function
    window.editAddress = function (id) {
        const address = savedAddresses.find(a => a._id === id);
        if (!address) return;

        document.getElementById('addressFormTitle').textContent = 'Edit Address';
        document.getElementById('addressFormModal').classList.add('active');
        document.getElementById('addressId').value = address._id;
        document.getElementById('fullName').value = address.name;
        document.getElementById('mobile').value = address.phone_number;
        document.getElementById('addressLine').value = address.address_name;
        document.getElementById('locality').value = address.locality;
        document.getElementById('city').value = address.city;
        document.getElementById('state').value = address.state;
        document.getElementById('pincode').value = address.pin_code;

        // document.querySelector(`input[name="addressType"][value="${address.address_type}"]`).checked = true;
    

    const form = document.getElementById('addressForm');
         form.method = "POST"
        form.action = '/address/edit';


    };


function openAddAddressModal() {
  const form = document.getElementById('addressForm');
  form.action = '/address/add';
  form.reset(); 
 
}







document.getElementById('placeOrderBtn').addEventListener('click', async () => {
    const addressId = selectedAddressId || ''; // from existing selected address logic
    const isTypedAddress  = !addressId;
    const saveForFuture = document.getElementById('saveAddressCheckbox')?.checked;

    
    // If user typed a new address, get form values
    const addressForm = document.getElementById('addressForm');
    
    const total = document.getElementById('finalTotal').value
    

    const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked')?.value;

    
  if (!paymentMethod) {
        return Swal.fire("Payment required","Please select any payment method to continue ","warning")
   }

          let payload = {
                           paymentMethod,             
                           saveForFuture,
                           isTypedAddress,
                         
                        };
                          
                        

    if (isTypedAddress) {

                  const form = document.getElementById('checkoutForm');

                  if (!form) {
                            return Swal.fire("Form Missing", "Checkout form not found!", "error");
                           }

 
                            const name = form.querySelector('[name="nameForm"]')?.value?.trim();
                            const phone_number = form.querySelector('[name="phone_numberForm"]')?.value?.trim();
                            const address_name = form.querySelector('[name="address_nameForm"]')?.value?.trim();
                            const locality = form.querySelector('[name="localityForm"]')?.value?.trim();
                            const city = form.querySelector('[name="cityForm"]')?.value?.trim();
                            const state = form.querySelector('[name="stateForm"]')?.value?.trim();
                            const pin_code = form.querySelector('[name="pin_codeForm"]')?.value?.trim();
                            const address_type = form.querySelector('input[name="address_typeForm"]:checked')?.value;



                      if (!name || !phone_number || !address_name || !locality || !city || !state || !pin_code || !address_type) {
                                    return Swal.fire("Missing Info", "Please fill in the full address before placing the order.", "warning");
                        }      

                      Object.assign(payload, {
                                               name,
                                               phone_number,
                                               address_name,
                                               locality,
                                               city,
                                               state,
                                               pin_code,
                                               address_type
                    
                                            });

                  

           } else {       
    
                   payload.addressId = addressId;

                  }
         
              if(paymentMethod === 'online'){
                   return handleOnlinePayment(payload); // Razorpay 
                } else {
                     return handleCOD(payload); //   handles both cod and wallet
                }

        })



       async function handleCOD(payload){
               try {

                   const response = await fetch('/orders/cod', {
                         method: 'POST',
                         headers: {
                                      'Content-Type': 'application/json'
                                     },
                        body: JSON.stringify(payload)
                      });

        const data = await response.json();

        if (data.success) {
            Swal.fire("Order Placed", "Your order has been placed successfully!", "success")
            .then(() => window.location.href = "/orders/success");
        } else {
          return   Swal.fire("Failed", data.message || "Something went wrong", "error");
        }

                    
         } catch (error) {
                    return Swal.fire("Server Error","Unable to submit the adddress","error");
                }
        }


    
  async function handleOnlinePayment(payload) {
    
    try {
        const response = await fetch('/orders/razorpay', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload)
        });

        const data = await response.json();

        if (!data.success) {
            return Swal.fire("Failed", data.message || "Unable to initiate payment", "error");
        }
 
        // Now initiate Razorpay/PayPal flow using SDK
        const options = {
            key: data.key,
            amount: data.order.amount,
            currency: "INR",
            name: "Petal and Mist",
            description: "Order Payment",
            order_id: data.order.id,
            handler: function (response) {
                verifyPayment(response, data.order.id , payload);
            },
            prefill: {
                name: data.user.name,
                email: data.user.email,
                contact: data.user.phone
            },
            theme: {
                color: "#3399cc"
            }
        };

        const rzp = new Razorpay(options);
        rzp.open();

        rzp.on('payment.failed', function (response){
           window.location.href = '/orders/failed';
       });

    } catch (error) {
       
        return Swal.fire("Payment Error", "Could not process the online payment.", "error");
    }
}

async function verifyPayment(paymentResponse, orderId, payload) {
    try {
        const res = await fetch('/orders/razorpay/verify', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                ...paymentResponse,
                orderId, payload,

            })
        });

        const result = await res.json();
        if (result.success) {
            Swal.fire("Success", "Your payment was successful!", "success")
                .then(() => window.location.href = "/orders/success");
        } else {
            return Swal.fire("Failed", result.message || "Payment verification failed", "error")
             .then(()=> window.location.href = "/orders/failed" )
        } 

    } catch (error) {
      
        return Swal.fire("Error", "Could not verify payment", "error");
    }
}
        

 

                
           async function applayCoupon(discountCoupon){ 
           
            try{ 
             const response = await fetch("/applayCoupon",{
                    method : 'POST',
                    headers : {"Content-Type" : "application/json" },
                    body : JSON.stringify({discountCoupon})
             })

             const data = await response.json()

           if(response.ok){ 

                   document.getElementById('discount-error').textContent = data.message                  
                  
                   document.getElementById('finalTotal').textContent =   "₹" + data.total.toFixed(2)


                const couponDiscountDiv = document.getElementById('couponDiscountDiv')
                const discountSection = document.querySelector('.discount-section');


                      discountSection.innerHTML = `
                            <div class="applied-coupon-box">
                              <div class="coupon-info">
                               <span class="badge-coupon">${data.coupon_name}</span>
                               <span class="coupon-message">Coupon applied successfully!</span>
                                <span class="coupon-discount">You saved ₹${data.discount.toFixed(2)}</span>
                              </div>
                               <button type="button" class="remove-coupon-btn" id="removeCouponBtn">×</button>
                              </div>
                            `;

                            couponDiscountDiv.innerHTML = `
                                  
                                   <span class="total-label">Coupon discount</span>
                                   <span class="total-value discount" id="couponDiscount">-₹${data.discount.toFixed(2)}</span>
                                 
                            `;

                      document.getElementById('removeCouponBtn').addEventListener('click', async () => {
                    const removeRes = await fetch('/removeCoupon', { method: 'POST' });
                   const removeData = await removeRes.json();
              if (removeData.success) {
               window.location.reload(); 
                   }
                });
  

             }else {
            
                document.getElementById('discount-error').textContent = data.message
                 document.getElementById('discount').textContent = "-₹" + data.discount
                document.getElementById('finalTotal').textContent =   "₹" + data.total
             }

            }catch(err){
                window.location.reload();
            }

            }




           document.querySelector('.apply-btn ')?.addEventListener('click' , async ()=> { 
             document.getElementById('discount-error').textContent = '';
           const discountCoupon = document.getElementById('discountCode').value.trim()
            

           if(discountCoupon){ 

              applayCoupon(discountCoupon)
           }else {
                 document.getElementById('discount-error').textContent = 'Please enter a coupon code.'
           }

            })

            document.querySelectorAll('.coupon-card').forEach(card=>{
                  card.addEventListener('click', ()=>{
                       document.getElementById('discount-error').textContent = '' ;
                      const couponCode = card.querySelector('h5').innerText.trim();
                      applayCoupon(couponCode)
                  })
            })

          


          // coupon section


          document.getElementById('toggleCouponsBtn')?.addEventListener('click', () => {

                  const list = document.getElementById('couponsList');
                   list.classList.toggle('hidden');

            });

            // remove coupon

                  document.getElementById('removeCouponBtn').addEventListener('click', async () => {
                    const removeRes = await fetch('/removeCoupon', { method: 'POST' });
                   const removeData = await removeRes.json();
              if (removeData.success) {
               window.location.reload(); 
                   }
                });






    });


   

    




</script>


</body>
</html>