<%- include("../../views/partials/admin/header") %>
<style>
 .col-md-3 {
   padding: 20px;
   border: 1px solid #ddd;
   border-radius: 10px;
   margin: 10px;
 }


 .error-message {
   color: red;
   margin-top: 5px;
 }


 .form-label {
   margin-bottom: 8px;
 }


 .form-control {
   width: 100%;
   padding: 8px;
   margin-bottom: 10px;
   border: 1px solid #ccc;
   border-radius: 5px;
   box-sizing: border-box;
 }


 .d-grid {
   margin-top: 20px;
 }


 .btn-primary {
   background-color: #007bff;
   color: #fff;
   border: 1px solid #007bff;
   border-radius: 5px;
   padding: 10px 20px;
   cursor: pointer;
 }


 .btn-primary:hover {
   background-color: #0056b3;
   border-color: #0056b3;
   
 }


       /* Modal Overlay */
    .modal-overlay {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(0, 0, 0, 0.6);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
    }

    /* Modal Box */
    .modal-box {
      background: #fff;
      border-radius: 12px;
      padding: 25px 30px;
      width: 100%;
      max-width: 500px;
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
    }

    .modal-box h2 {
      margin-bottom: 18px;
      font-size: 22px;
      color: #222;
    }

    label {
      display: block;
      margin-top: 15px;
      font-weight: 500;
      font-size: 14px;
    }

    input[type="text"],
    input[type="number"],
    input[type="date"],
    select {
      width: 100%;
      padding: 8px;
      border-radius: 8px;
      border: 1px solid #ccc;
      margin-top: 5px;
      font-size: 14px;
    }

    .row-3 {
      display: flex;
      gap: 10px;
     
    }

    .row-3 > div {
      flex: 1;
    }

    .modal-actions {
      margin-top: 20px;
      display: flex;
      justify-content: space-between;
    }

    .save-btn,
    .cancel-btn {
      padding: 8px 18px;
      border: none;
      border-radius: 20px;
      font-weight: bold;
      cursor: pointer;
      transition: 0.3s ease;
      font-size: 14px;
    }

    .save-btn {
      background-color: #4CAF50;
      color: #fff;
    }

    .cancel-btn {
      background-color: #f44336;
      color: #fff;
    }

    /* Toggle Switch */
    .tg-list-item {
      list-style: none;
  
    }

    .tgl {
      display: none;
    }

    .tgl-skewed + .tgl-btn {
      position: relative;
      display: inline-block;
      width: 100px;
      height: 40px;
      overflow: hidden;
      transform: skew(-10deg);
      background: #888;
      border-radius: 5px;
      transition: all 0.2s ease;
      cursor: pointer;
    }

    .tgl-skewed + .tgl-btn:before,
    .tgl-skewed + .tgl-btn:after {
      position: absolute;
      width: 100%;
      height: 100%;
      line-height: 40px;
      font-weight: bold;
      color: #fff;
      text-align: center;
      transition: all 0.2s ease;
      transform: skew(10deg);
    }

    .tgl-skewed + .tgl-btn:before {
      content: attr(data-tg-off);
      left: 0;
    }

    .tgl-skewed + .tgl-btn:after {
      content: attr(data-tg-on);
      left: 100%;
    }

    .tgl-skewed:checked + .tgl-btn {
      background: #86d993;
    }

    .tgl-skewed:checked + .tgl-btn:before {
      left: -100%;
    }

    .tgl-skewed:checked + .tgl-btn:after {
      left: 0;
    }

    @media (max-width: 500px) {
      .row-3 {
        flex-direction: column;
      }
    }


 </style>

<section class="content-main">
 <div class="content-header">
   <div>
     <h2 class="content-title card-title">Coupons</h2>
   </div>
 </div>
 <div class="card">
   <div class="card-body">
     <div class="row">
      <div class="col-md-3">
  <form onsubmit="return validateForm(event)">
    <!-- Coupon Name -->
    <div class="mb-3">
      <label for="coupon-name" class="form-label">Coupon Name</label>
      <input
        type="text"
        id="coupon-name"
        name="couponName"
        placeholder="Type here"
        class="form-control"
      />
      <div id="error-coupon-name" class="error-message"></div>
    </div>

    <!-- Coupon Type -->
    <div class="mb-3">
      <label for="coupon-type" class="form-label">Coupon Type</label>
      <select class="form-select" id="coupon-type" name="couponType" onchange="toggleMaxDiscount()">
        <option value="fixed">Fixed Amount</option>
        <option value="percentage">Percentage</option>
      </select>
    </div>

    <!-- Offer Price -->
    <div class="mb-3" id="offerPrice">
      <label for="offer-price" class="form-label">Offer price</label>
      <input
        type="text"
        name="offerPrice"
        id="offer-price"
        placeholder="e.g., 100 or 20 (based on type) "
        class="form-control"
      />
      <div id="error-offer-price" class="error-message"></div>
    </div>

    <!-- Max Discount (shown only if percentage) -->
    <div class="mb-3 d-none" id="max-discount-container">
      
      <label for="max-discount" class="form-label">Max Discount</label>
      <input
        type="text"
        name="maxDiscount"
        id="max-discount"
        placeholder="₹ Max discount allowed"
        class="form-control"
      />
        <div id="error-max-discount" class="error-message"></div>
    </div>

    <!-- Minimum Price -->
    <div class="mb-3">
      <label for="minimum-price" class="form-label">Minimum Cart Value</label>
      <input
        type="text"
        name="minimumPrice"
        id="minimum-price"
        placeholder="₹ Minimum cart value"
        class="form-control"
      />
      <div id="error-minimum-price" class="error-message"></div>
    </div>

    <!-- Start Date -->
    <div class="mb-3">
      <label for="startingDate" class="form-label">Start Date</label>
      <input
        type="date"
        name="startDate"
        id="startingDate"
        class="form-control"
        required
      />
      <div id="error-start-date" class="error-message"></div>
    </div>

    <!-- End Date -->
    <div class="mb-3">
      <label for="expiringDate" class="form-label">End Date</label>
      <input
        type="date"
        name="endDate"
        id="expiringDate"
        class="form-control"
      />
      <div id="error-end-date" class="error-message"></div>
    </div>

    <!-- Submit -->
    <div class="d-grid">
      <button class="btn btn-primary" type="submit">Add Coupon</button>
    </div>
    <div id="err-msg" class="error-message"></div>
  </form>
</div>




       <div class="col-md-7 ml-105">
         <div class="table-responsive">
             <table class="table table-hover">
                 <thead>
                     <tr>
                         <th>Name</th>
                         <th>Created On</th>
                         <th>Expire On</th>
                         <th>Offer Price</th>
                         <th>Minimum Price</th>
                         <th>Status</th>
                         <th>Edit/Delete</th>
                     </tr>
                 </thead>
                 <tbody>
                   <% coupon.forEach(c=>{  %> 
                     <tr>
                         <td class="text-start"><%= c.coupon_name%></td>
                         <td class="text-start"><%= c.start_date.toLocaleDateString() %></td>
                         <td class="text-start"><%= c.expiry_date?.toLocaleDateString() || '  ____' %></td>
                         <% if(c.discount_type === 'percentage') { %> 
                           <td class="text-start"><%= c.offer_price %> % Max(<%=c.max_discount%>)</td>
                           <% } else {%>
                         <td class="text-start">₹ <%= c.offer_price %></td>
                            <%}%>
                         <td class="text-start"> <%= c.minimum_price %></td>
                         <td class="text-start"> <%= c.isActive? 'Active': 'Expired' %></td>  
                         <td class="text-start">
                             <button  class="btn btn-primary btn-sm" onclick="openEditModal(this)" data-id="<%= c._id %>"  data-coupon_name="<%= c.coupon_name %>"  data-start_date= " <%= c.start_date%>" data-expiry_date="<%= c.expiry_date %> " data-offer_price="<%= c.offer_price %>" data-minimum_price="<%= c.minimum_price %>"  data-isActive="<%= c.isActive %>" data-discount_type="<%= c.discount_type%>" data-max_discount="<%= c.max_discount%>" >Edit </button>
                         <a href="#" onclick="confirmDelete('<%= c._id%>')" class="btn btn-danger btn-sm" style="height: 35px;width: 105px;"">Delete</a>

                         </td>
                     </tr>
                     <% }) %>
                 </tbody>
             </table>
         </div>
     </div>
     </div>
   </div>
 </div>
</section>

 <!-- Edit Modal -->

 <div id="editModal" class="modal-overlay"  style="display: none;" >
  <div class="modal-box">
    <h2>Edit Coupon</h2>
  <!-- Inside the modal box form -->
<form id="editCouponForm" onsubmit="return validateEditForm(event)" method="post" action="/admin/editCoupon">
  <input type="hidden" id="couponId" name="couponId">

  <label for="couponCode">Coupon Code:</label>
  <input type="text" id="couponCode" name="coupon_name" required>
   <div id="error-edit-couponName" class="error-message"></div>

  <label for="startDate">Start Date:</label>
  <input type="date" id="startDate" name="start_date" required>
     <div id="error-edit-startDate" class="error-message"></div>
     
  <label for="expiryDate">End Date:</label>
  <input type="date" id="expiryDate" name="expiry_date">
      <div id="error-edit-expiryDate" class="error-message"></div>

  <!-- Row 1: Type + Max -->
  <div class="row-3">
    <div>
      <label for="discountType">Type</label>
      <select id="discountType" name="discount_type">
        <option value="fixed">Fixed</option>
        <option value="percentage">Percentage</option>
      </select>
    </div>
             
    <div>
      <label for="maxDiscount">Max discount (for % only)</label>
      <input type="number" id="maxDiscount" name="max_discount" >
       <div id="error-edit-maxDiscount" class="error-message"></div>

    </div>
  </div>
             
  <!-- Row 2: Discount + Min Price -->
  <div class="row-3">
    <div>
      <label for="discount">Discount</label>
      <input type="number" id="discount" name="offer_price" required>
      <div id="error-edit-discount" class="error-message"></div>
    </div>
        

    <div>
      <label for="minimumPrice">Min. Price for applaying...</label>
      <input type="number" id="minimumPrice" name="minimum_price" required>
       <div id="error-edit-minPrice" class="error-message"></div>
    </div>
  </div>
           

  <!-- Row 3: Status Toggle -->
  <div style="margin-top: 20px;">
    <label>Status: (click to change)</label>
    <li class="tg-list-item">
      <input class="tgl tgl-skewed" id="isActiveToggle" type="checkbox" name="isActive" value="true" />
      
      <label class="tgl-btn" data-tg-off="Expired" data-tg-on="Active" for="isActiveToggle"></label>
    </li>
  </div>

  <!-- Actions -->
  <div class="modal-actions">
    <button type="submit" class="save-btn">Save</button>
    <button type="button" onclick="closeEditModal()" class="cancel-btn">Cancel</button>
  </div>
</form>

  </div>
</div>
<script type="application/json" id="couponData">
       <%- JSON.stringify(coupon) %>
</script>

<script>

   

 async function validateForm(e) { 

  e.preventDefault()
   document.querySelectorAll(".error-message").forEach((element) => (element.innerHTML = ""));
   const sDate = document.getElementsByName("startDate")[0].value;
   const eDate = document.getElementsByName("endDate")[0].value;
   const sDateObj = new Date(sDate);
   const eDateObj = new Date(eDate);
   const todayDateObj = new Date();
   todayDateObj.setHours(0, 0, 0, 0);


   if (sDateObj > eDateObj) {
     document.getElementById("error-end-date").innerHTML ="End date should be after the start date";
     return false;
   }


   if (sDateObj <= todayDateObj) {
     document.getElementById("error-start-date").innerHTML ="Starting date should be greater than or equal to today's date";
     return false;
   }


   let name = document.getElementsByName("couponName")[0].value;
   const nameRegex = /^[A-Za-z0-9]{1,50}$/;


   if (!nameRegex.test(name)) {
     document.getElementById("error-coupon-name").innerHTML =
       "Invalid coupon name";
     return false;
   }

   const couponType = document.getElementsByName("couponType")[0].value;
  

   const offerPriceInput = document.getElementsByName("offerPrice")[0];
   const minimumPriceInput = document.getElementsByName("minimumPrice")[0];


   const offerPrice = offerPriceInput.value.trim() !== ""? parseInt(offerPriceInput.value): NaN;
   const minimumPrice = minimumPriceInput.value.trim() !== ""? parseInt(minimumPriceInput.value): NaN;


   if (offerPrice >= minimumPrice) {
     document.getElementById("error-offer-price").innerHTML = "Offer Price must not be greater than Minimum Cart value";
     return false;
   }


   if (isNaN(offerPrice) || isNaN(minimumPrice)) {
     document.getElementById("error-offer-price").innerHTML ="Please enter numeric values for Offer Price and Minimum Price";
     return false;
   }

   const maxDiscountInput = document.getElementsByName("maxDiscount")[0]
 
   const maxDiscount =  maxDiscountInput.value.trim() !== ""? parseInt(maxDiscountInput.value): NaN;

   if(couponType === 'percentage'){
         if( isNaN(offerPrice) ) {
            document.getElementById("error-offer-price").innerHTML = "Please enter a numberic value between 1 to 90";
            return false;
         }

         if(offerPrice >90 || offerPrice <1){
          document.getElementById("error-offer-price").innerHTML = "Please enter a value between 1 to 90";
          return false;
         }

         if(isNaN(maxDiscount)){
             document.getElementById("error-max-discount").innerHTML = "Please enter a valid number";
             return false;
         }   
        
   }

   


       const formData = {
       couponName: name,
       startDate: sDateObj,
       endDate: eDateObj,
       offerPrice: offerPrice,
       minimumPrice: minimumPrice,
       couponType,
       maxDiscount
   };
    
   const response = await fetch("/admin/createCoupon",{
        method:'POST',
        headers : {'Content-Type' : 'application/json'},
        body : JSON.stringify({formData})
   })

   const data = await response.json()

      if(data.success){
         Swal.fire('Success', "Coupon created" , "success")
         .then(()=> 
         window.location.reload()
        )
      }else{
         Swal.fire("Failed", data.message || 'Failed to create coupon' , "error")
      }
    
 }

 // set default today
function setCurrentDate (){ 

  let today = new Date();
 const yyyy = today.getFullYear();
 const mm = (today.getMonth()+1).toString().padStart(2,"0");
 const dd = today.getDate().toString().padStart(2,"0");
 document.getElementById('startingDate').value = `${yyyy}-${mm}-${dd}`;
  
};
setCurrentDate();

function confirmDelete(couponId) {
   Swal.fire({
     title: "Are you sure?",
     text: "You won't be able to revert this!",
     icon: "warning",
     showCancelButton: true,
     confirmButtonColor: "#d33",
     cancelButtonColor: "#3085d6",
     confirmButtonText: "Yes, delete it!",
   }).then((result) => {
     if (result.isConfirmed) {
       deleteCoupon(couponId);
     }
   });
 }


 function deleteCoupon(couponId) {
   $.ajax({
     url: `/admin/deletecoupon?id=${couponId}`,
     method: "GET",
     success: function () {
       Swal.fire({
         icon: "success",
         title: "Deleted!",
         text: "The coupon has been deleted.",
         confirmButtonText: "OK",
       }).then(() => {
         window.location.reload();
       });
     },
     error: function () {
       Swal.fire({
         icon: "error",
         title: "Error!",
         text: "Failed to delete the coupon. Please try again.",
       });
     },
   });
 }

let currentCouponName = '';
  function openEditModal(button) {

    // Fill form with existing coupon data

     function correctDate(data){
        const currentDate = new Date(data);
         const yyyy = currentDate.getFullYear();
        const mm = (currentDate.getMonth()+1).toString().padStart(2,"0");
        const dd = currentDate.getDate().toString().padStart(2,"0");
        return `${yyyy}-${mm}-${dd}`;
     }
    const startDate = correctDate(button.dataset.start_date);
    const endDate = correctDate(button.dataset.expiry_date)

 
    currentCouponName = button.dataset.coupon_name;

    console.log("name " , currentCouponName)

    document.getElementById('couponId').value = button.dataset.id;
    document.getElementById('couponCode').value = button.dataset.coupon_name
    document.getElementById('discount').value = button.dataset.offer_price;
     document.getElementById('startDate').value = startDate;
     document.getElementById('expiryDate').value = endDate;
     document.getElementById('maxDiscount').value = button.dataset.max_discount;
      const isActive =  button.dataset.isactive === 'true' ? true : false
     document.getElementById('isActiveToggle').checked = isActive;
     document.getElementById('discountType').value = button.dataset.discount_type;
     if(button.dataset.discount_type === 'percentage'){
          document.getElementById('maxDiscount').disabled = false;
     }else{
        document.getElementById('maxDiscount').disabled =true;
     }
    
    
     document.getElementById('minimumPrice').value = button.dataset.minimum_price


    document.getElementById('editModal').style.display = 'flex';
  }

   const discountTypeSelect = document.getElementById('discountType');
  const maxDiscountInput = document.getElementById('maxDiscount');

  discountTypeSelect.addEventListener('change', () => {
    maxDiscountInput.disabled = discountTypeSelect.value !== 'percentage';
    if (maxDiscountInput.disabled) maxDiscountInput.value = '';
  });

  window.addEventListener('DOMContentLoaded', () => {
    if (discountTypeSelect.value !== 'percentage') {
      maxDiscountInput.disabled = true;
    }
  });


  function closeEditModal() {
    document.getElementById('editModal').style.display = 'none';
  }


 
  function toggleMaxDiscount() {
    const type = document.getElementById("coupon-type").value;
    const container = document.getElementById("max-discount-container");
 

    if (type === "percentage") {
      container.classList.remove("d-none");
    
    } else {
      container.classList.add("d-none");
     
    }
  }

 

function validateEditForm(e){

  const rawCoupon = document.getElementById('couponData').textContent;
  const coupons = JSON.parse(rawCoupon)

   document.querySelectorAll('.error-message').forEach(element=> element.innerHTML ='' );
   const name = document.getElementById("couponCode").value

  const editedCouponName = coupons.find(c=> c.coupon_name.toLowerCase() === name.toLowerCase());

  console.log("edited"  , editedCouponName.coupon_name , currentCouponName.toLowerCase())


   if(editedCouponName && editedCouponName.coupon_name.toLowerCase() !== currentCouponName.toLowerCase()){
       document.getElementById("error-edit-couponName").innerHTML ="Coupon Name already exists";
       return false;
     
   }
  
  
   const nameRegex = /^[A-Za-z0-9]{1,50}$/;


   if (!nameRegex.test(name)) {
     document.getElementById("error-edit-couponName").innerHTML =
       "Invalid coupon name";
     return false;
   }

   const startDate = document.getElementById("startDate").value;
   const expiryDate = document .getElementById("expiryDate").value;
   const maxDiscount = document.getElementById("maxDiscount").value;
   const discount = document.getElementById("discount").value;
   const minPrice = document.getElementById("minimumPrice").value;
   const discountType = document.getElementById("discountType").value;


   
   if( expiryDate && startDate > expiryDate){
      document.getElementById("error-edit-expiryDate").innerHTML = "Expiry date should not be less than start date";
      return false;
   }

  if(Number(maxDiscount) > Number(minPrice)){

     document.getElementById("error-edit-maxDiscount").innerHTML = "Max. discount should not be greater than minimum price";
     return false;
  }
   if(Number(discount) > Number(minPrice)){ 
   document.getElementById("error-edit-discount").innerHTML = "Discount should not be greater than minimum price";
  return false;
   }

   if(discountType === 'percentage' && (Number(discount > 90 || discount < 1 )) ){
        document.getElementById("error-edit-discount").innerHTML = "Enter a value between 1 and 90";
        return false;
   }


      
     return true;
}

  


</script>
<%- include("../../views/partials/admin/footer") %>

