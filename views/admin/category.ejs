<%- include("../../views/partials/admin/header") %>
 <head> 
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
 </head>
<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3>Category Management</h3>
        <!-- <a href="/admin/category/add" class="btn btn-primary">+ Add Category</a> -->
    

    <!-- Add Category Button -->
<button type="button" class="btn btn-outline-primary mb-3" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
    + Add New Category
  </button>
  </div>

  <% if(message && message.length > 0 ) { %> 
  <div  style=" background: rgb(231, 216, 9); text-align: center; margin-bottom: 4px;"> 
         <h3 id="message" class="text-danger" style="font-weight: bolder; padding: 10px; text-shadow: 1px 1px 0 black;"><%= message %></h3>
  </div>

  <% } %>
  
  <!-- Add Category Modal -->
  <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <form action="/admin/category/add" method="post" enctype="multipart/form-data" id="addCategoryForm">
        <div class="modal-content">
          <div class="modal-header bg-primary text-white">
            <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="categoryName" class="form-label">Category Name</label>
              <input type="text" class="form-control" name="categoryName" id="categoryName"  >
            </div>
            <div class="mb-3">
              <label for="subcategoryName" class="form-label">Subcategory (Optional)</label>
              <input type="text" class="form-control" name="subcategoryName" id="subcategoryName">
            </div>
              <div class="mb-3">
              <label for="subcategorOffer" class="form-label">Add Offer (%)</label>
              <input type="number" class="form-control" name="categoryOffer" id="categoryOffer">
            </div>

            <div class="mb-3">
              <label for="image" class="form-label">category image</label>
              <div style="width: 250px;"> 
            <img src="" alt="" id="categoryImage">
            <input class="form-control border" type="file" name="image" id="inputFile"  accept="image/png, image/jpeg, image/jpg, image/webp" onchange="viewImage(event,1)" >
              </div>
            <div  class="d-none" width="250px"> 
              <img src="" id="cropImage" >
             <button type="button" class="btn btn-sm btn-info mt-1" id="saveButton">save</button>
            </div>
            </div>
            
          </div>
          <div class="modal-footer">
            <button type="submit" class="btn btn-success">Add</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          </div>
        </div>
      </form>
    </div>
  </div>
  
 
    <% if (categories.length === 0) { %>
        <p>No categories available.</p>
    <% } else { %>
        <table class="table table-bordered table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Category</th>
                    <th>Name</th>
                    <th>Status</th>
                    <th>Offer</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody class="align-middle ">
                <% categories.forEach((category,index) => { %>
                   <tr class="table-primary align-middle">
                       <td class="text-start align-middle"> 

                      <img
                        src="<%=category?.category_image %>"
                        alt="Img..."
                        style="width: 75px; height: auto"
                        class="img-fluid rounded-circle"
                      />                

                     </td> 
                         <td class="text-middle"> <strong><%= category.name %></strong></td>
                        <td><%= category.status %></td>
                        <td><%= category.category_offer%></td>
                        <td>

                                <!-- Trigger Button -->
<button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#editCategoryModal<%= category._id %>">Edit</button>


<!--edit category Modal -->
<div class="modal fade" id="editCategoryModal<%= category._id %>" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <form action="/admin/category/editCategory/<%= category._id %>?page=<%=currentPage%>" method="post" enctype="multipart/form-data" class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Edit Category</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        <input type="text" name="name" value="<%= category.name %>" class="form-control"   />
      </div>
    
       <div class="modal-header">
        <h6 class="modal-title">Offer (%)</h6>
     
      </div>
      <div class="modal-body">
        <input type="number" name="offer" value="<%= category.category_offer %>" class="form-control"  />
      </div>
        
      <div class=" modal-header"> 
        <h6 class="modal-title"> Image</h6>
        </div>
           <div class="modal-body"">
            
            <img src="<%=category?.category_image%>" alt="img..." id="viewEditImage<%=index%>" width="200px">
      
             <br>
             <label style="cursor: pointer;"> 
             <h6 class="btn btn-sm btn-info modal-title"> Change Image </h6> 
              <input class="form-control border d-none" name="image" type="file" id="editInputFile<%=index%>" onchange="viewEditImage(event,'<%=index%>')" />
            </label>
          
             <div  style="max-width: 400px; display: none; position: fixed; top: 10%; left: 50%; transform: translateX(-50%); padding: 20px; border: 1px solid #ccc; z-index: 1000; background: rgba(159, 148, 148, 0.5);" > 
              <img src="" id="editCropImage<%=index%>" >
                <button class="btn btn-sm btn-danger mt-1" type="button" id="editCropCancelBtn<%=index%>" onclick="closeCropModal('<%=index%>')" > Cancel</button>
             <button type="button" class="btn btn-sm btn-info mt-1" id="editCropBtn<%=index%>">Crop</button>
            </div>

            </div>

      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
      </div>
    </form>
  </div>
</div>



                            <!-- <a href="/admin/category/editCategory/<%= category._id %>" class="btn btn-sm btn-warning">Edit</a> -->

                            <% if (category.status === 'active') { %>
                                <a href="/admin/category/block?id=<%= category._id %>" class="btn btn-sm btn-secondary">Unlist</a>
                            <% } else { %>
                                <a href="/admin/category/unblock?id=<%= category._id %>" class="btn btn-sm btn-success">List</a>
                            <% } %>
                            <a  onclick="deleteCat('<%= category._id %>')" class="btn btn-sm btn-danger">Delete</a>

                             <!-- add subcategories -->

                                                        
<button class="btn btn-sm btn-primary ms-2" data-bs-toggle="modal" data-bs-target="#addsubcategoryModal<%= category._id %>">+ Add Subcategory</button>

<!-- Modal -->
<div class="modal fade" id="addsubcategoryModal<%= category._id %>" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <form action="/admin/subcategory/add/<%= category._id %>" method="POST" class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Add Subcategory</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        <input type="text" name="name"  class="form-control" required  />
      </div>

      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
      </div>
    </form>
  </div>
</div>
                            
                            
                            
                    
           </td>
                   </tr>

                    <%  if (category.subcategories?.length > 0)  { %>

                        <% category.subcategories.forEach(sub => { %>
                            <tr>
                                <td></td>
                                <td class="ps-5">â†³ <%= sub.name %></td>
                                <td><%= sub.status %></td>
                                <td></td>
                                <td>
                                               <!-- edit subcategory Button -->
<button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#editSubcategoryModal<%= sub._id %>">Edit</button>

<!-- Modal -->
<div class="modal fade" id="editSubcategoryModal<%= sub._id %>" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <form action="/admin/subcategory/edit/<%= sub._id %>" method="POST" class="modal-content" >
      <div class="modal-header">
        <h5 class="modal-title">Edit Subcategory</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        <input type="text" name="name" value="<%= sub.name %>" class="form-control"   />
      </div>

      <div class="modal-footer">
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
      </div>
    </form>
  </div>
</div>    



                                    
                                    <% if (sub.status === 'blocked') { %>
                                      <% if(category.status === 'blocked') { %>
                                               <a href="/admin/subcategory/block/<%= sub._id %>" class="btn btn-sm btn-success disabled">List</a>
                                             
                                        <% } else {%>
                                        <a href="/admin/subcategory/unblock/<%= sub._id %>" class="btn btn-sm btn-success">List</a>
                                        <% } %>
                                    <% } else { %>
                                        <a href="/admin/subcategory/block/<%= sub._id %>" class="btn btn-sm btn-primary">Unlist</a>
                                    <% } %>
                                    <a href="/admin/subcategory/delete/<%= sub._id %>" class="btn btn-sm btn-danger">Delete</a>
                                </td>
                            </tr>
                        <% }) %>
                    <% } else { %>
                        <tr>
                            <td class="ps-5 text-muted" colspan="3">â†³ No subcategories</td>
                        </tr>
                    <% } %>
                <% }) %>
            </tbody>
        </table>
    <% } %>

  

       <nav aria-label="Page navigation">
              <ul class="pagination justify-content-center">
         
               <% if (currentPage > 1) { %>
                   <% if (currentPage > 2) { %> 
                    <li class="page-item">
                      <a class="page-link" href="?page=1">First</a>
                    </li>
                    <% } %>
                  <li class="page-item">
                      <a class="page-link" href="?page=<%= currentPage - 1 %>">Prev</a>
                  </li>
               <% } %>

                   <% 
                      let startPage = Math.max(1, currentPage - 1);  
                      let endPage = Math.min(totalPages, startPage + 3);  

                      if (endPage - startPage < 3) {
                         startPage = Math.max(1, endPage - 3);  
                       }
                    %>

                   <% for (let i = startPage; i <= endPage; i++) { %>
                      <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                      </li>
                   <% } %>

                    <% if (endPage < totalPages) { %>
                        <li class="page-item disabled">
                           <span class="page-link">...</span>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="?page=<%= totalPages %>"><%= totalPages %></a>
                        </li>
                     <% } %>
                    
                     <% if (totalPages > currentPage) { %> 
                            
                              <li class="page-item">
                                <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
                              </li>
                            
                      
                     <% } %>

              </ul>
            </nav>
      

</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script>
 
document.getElementById('addCategoryForm').addEventListener('submit',validateCategoryForm)

let cropper;
let formData;

async function validateCategoryForm(e) {
  e.preventDefault();

const categoryName = document.getElementById("categoryName").value.trim();
const subcategoryName = document.getElementById("subcategoryName").value.trim();
const categoryOffer = Number(document.getElementById('categoryOffer').value);
const image = document.getElementById('categoryImage').src

if(!categoryName){
    Swal.fire("warning","Please enter the category name" , "warning");
    return;
}

if( categoryOffer && (categoryOffer > 90 || categoryOffer < 1) ){
   Swal.fire("warning","please enter a value between 1 and 90" , "warning")
   return;
}

if(!cropper){
   Swal.fire("Failed", "please upload a category Image", 'warning')
   return;
}

    const canvas = cropper.getCroppedCanvas();
    const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));
  
     const formData = new FormData()
     formData.append("image", blob, "category-image.jpg");
     formData.append("categoryName" , categoryName)
     formData.append("subcategoryName",subcategoryName)
     formData.append("categoryOffer", categoryOffer)
  

try {

  const response = await fetch('/admin/category/add',{
               method:'post',
               body: formData
  })

    const data = await response.json();


    if(!data.success){
        Swal.fire("Failed",data.message || "category already exists","error")
    }else{
           
           Swal.fire( 'Sucess', data.message || "success", 'success')
           .then(()=>   window.location.href = "/admin/category" )
        
    }
  
} catch (error) {
   console.log('error adding brand',error)
       Swal.fire("Failed",'Internal server error','error')
}

  
}


  function viewImage(event , index) {
           let input = event.target;
           let reader = new FileReader();


           reader.onload = function () {
               let dataURL = reader.result;
               let image = document.getElementById('cropImage');
                 image.src = dataURL;

               let croppedContainer = image.parentNode;
               croppedContainer.className = 'd-block'

               if(image.cropperInstance){
                  image.cropperInstance.destroy()
               }
               
               if(cropper) cropper.destroy();

                cropper = new Cropper(image, {
                   aspectRatio:1,
                   viewMode: 1,
                   guides: true,
                   background: false,
                   autoCropArea: 0.8,
                   zoomable: true
               });
               
                image.cropperInstance = cropper;
               
               let saveButton = document.querySelector('#saveButton');
                const viewImage = document.querySelector('#categoryImage');

               saveButton.addEventListener('click',  function () {
                             
                   let croppedCanvas = cropper.getCroppedCanvas();         
                    const croppedDataURL  = croppedCanvas.toDataURL('image/jpeg', 1.0);
                   let timestamp = new Date().getTime();
                   let fileName = `cropped-img-${timestamp}-${index}.png`;


                   croppedCanvas.toBlob(blob => {

                       let inputField = document.getElementById('inputFile')
                       let imgFile = new File([blob], fileName, {type: "image/png"});

                       const fileList = new DataTransfer();
                       fileList.items.add(imgFile);
                       inputField.files = fileList.files
                      croppedContainer.className = 'd-none'
                      // uploadByFile(fileList.files)
                       image.cropperInstance = null;
                        viewImage.src = croppedDataURL;
                   } , "image/png");
                   
               });
           };
           reader.readAsDataURL(input.files[0]);
           input.value = '';
       }

let editCropper;

function viewEditImage(event , index) {

           let input = event.target;
           let reader = new FileReader();

           reader.onload = function () {
               let dataURL = reader.result;
               let image = document.getElementById('editCropImage'+index);
                 image.src = dataURL;
               let cropperContaniner = image.parentNode;
               cropperContaniner.style.display = 'block';

              let cropBtn = document.getElementById('editCropBtn'+index)
              let cancelBtn = document.getElementById('editCropCancelBtn'+index);


               if(image.cropperInstance){
                  image.cropperInstance.destroy()
               }
             

                 editCropper = new Cropper(image, {
                   aspectRatio:1,
                   viewMode: 1,
                   guides: true,
                   background: false,
                   autoCropArea: 0.8,
                   zoomable: true
               });
               
                image.cropperInstance = editCropper;
               
               let saveButton = document.querySelector('#v');
                const viewImage = document.querySelector('#viewEditImage'+index);

               cropBtn.addEventListener('click',  function () {
                             
                   let croppedCanvas = editCropper.getCroppedCanvas();         
                    const croppedDataURL  = croppedCanvas.toDataURL('image/jpeg', 1.0);
                   let timestamp = new Date().getTime();
                   let fileName = `cropped-img-${timestamp}-${index}.png`;


                   croppedCanvas.toBlob(blob => {

                       let inputField = document.getElementById('editInputFile'+index)
                       let imgFile = new File([blob], fileName, {type: "image/png"});

                       const fileList = new DataTransfer();
                       fileList.items.add(imgFile);
                       inputField.files = fileList.files
                       cropperContaniner.style.display = 'none'
                       editCropper.destroy();
                       image.cropperInstance = null;
                        viewImage.src = croppedDataURL;
                   } , "image/png");
                   
               });
           };
           reader.readAsDataURL(input.files[0]);
           input.value='';
       }

       function closeCropModal(index) {
        const container =  document.getElementById(`editCropImage${index}`).parentNode;
        container.style.display ='none';
        if (editCropper) {
            editCropper.destroy();
          delete editCropper;
          }
      }

    async function deleteCat(catId) {
          
         const result = await Swal.fire({
                  title: "Are you sure?",
                   text: "You won't be able to revert this!",
                   icon: "warning",
                   showCancelButton: true,
                   confirmButtonColor: "#d33",
                   cancelButtonColor: "#3085d6",
                   confirmButtonText: "Yes, delete it!",
              })
            
                     if(result.isConfirmed){

                        const response = await fetch( '/admin/category/delete?id='+catId , { 
                           method : 'GET' 

                        });

                        if(response.ok){ 
                          await Swal.fire("Deleted!", "Category has been deleted.", "success");
                         window.location.reload();
                        } else {
                          await Swal.fire("Error!", "Failed to delete category.", "error");
                        }

                     }          
      }

      document.addEventListener('DOMContentLoaded',function (){
           const message = document.getElementById('message');
           const container = message?.parentNode;


           if(message && message?.textContent !== ""){
               setTimeout(()=>{
                message.textContent = '';
                container.style.display = 'none';
             },3000)
           } 

      })


</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<%- include("../../views/partials/admin/footer") %>
